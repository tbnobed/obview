obtv-admin@obview-tbn:/var/www/obview$ # Check the original database connection code
cat /var/www/obview/server/db.ts
import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";
import * as schema from "@shared/schema";

neonConfig.webSocketConstructor = ws;

if (!process.env.DATABASE_URL) {
  throw new Error(
    "DATABASE_URL must be set. Did you forget to provision a database?",
  );
}

export const pool = new Pool({ connectionString: process.env.DATABASE_URL });
export const db = drizzle({ client: poo# Check for any deployment or build scripts/obview$ # Check for any deployment or build scripts
find /var/www/obview -name "*.sh" | xargs ls -la
cat /var/www/obview/scripts/build-and-start.sh 2>/dev/null || echo "Not found"
-rw-rw-r-- 1 obtv-admin obtv-admin  306 Apr 30 06:02 /var/www/obview/init-scripts/02-init-db.sh
-rwxrwxr-x 1 obtv-admin obtv-admin 1155 Apr 30 06:33 /var/www/obview/patch-db.sh
-rwxrwxr-x 1 obtv-admin obtv-admin 1342 Apr 30 06:20 /var/www/obview/scripts/build-and-start.sh
-rw-rw-r-- 1 obtv-admin obtv-admin  386 Apr 30 06:02 /var/www/obview/scripts/docker-entrypoint.sh
-rw-rw-r-- 1 obtv-admin obtv-admin  714 Apr 30 06:02 /var/www/obview/scripts/wait-for-db.sh
-rwxrwxr-x 1 obtv-admin obtv-admin  107 Apr 30 06:28 /var/www/obview/vite-patch.sh
#!/bin/bash
set -e

echo "Building OBview.io application..."

# Install dependencies if needed
npm install

# Build the frontend
echo "Building frontend..."
npm run build

# Create uploads directory if it doesn't exist
mkdir -p /var/www/obview/uploads
chmod 755 /var/www/obview/uploads

# Setup PM2 if not already installed
if ! command -v pm2 &> /dev/null; then
    echo "Installing PM2 globally... (requires sudo)"
    sudo npm install -g pm2
    echo "PM2 installed successfully."
fi

# Check if the application is already running with Node directly
PID=$(lsof -t -i:5000 2>/dev/null)
if [ ! -z "$PID" ]; then
    echo "Stopping existing Node.js process on port 5000..."
    kill -9 $PID 2>/dev/null || true
fi

# Start or restart the application with PM2
if pm2 list | grep -q "obview"; then
    echo "Restarting application with PM2..."
    pm2 restart obview
else
    echo "Starting application with PM2..."
    cd /var/www/obview
    pm2 start dist/index.js --name obview -- --port 5000 --host 0.0.0.0
fi

# Configure PM2 to start on boot
echo "Saving PM2 process list..."
pm2 save

echo "OBview.io has been built and started."
echo "You can access it at http://localhost:5000 or http://your-server-ip:5000"
echo "Admin login: username: admin, password: Admin123!"
echo "IMPORTANT: Please change the admin password after first login."
obtv-admin@obview-tbn:/var/www/obview$ # Check the original application startup script
cat /var/www/obview/dist/index.js | head -50
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// server/utils/sendgrid.ts
var sendgrid_exports = {};
__export(sendgrid_exports, {
  sendEmail: () => sendEmail,
  sendInvitationEmail: () => sendInvitationEmail
});
import { MailService } from "@sendgrid/mail";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
function logToFile(message) {
  const timestamp2 = (/* @__PURE__ */ new Date()).toISOString();
  const logMessage = `${timestamp2} - ${message}
`;
  fs.appendFileSync(logFilePath, logMessage);
}
async function sendEmail(params) {
  try {
    logToFile(`Sending email with the following parameters:`);
    logToFile(`  - To: ${params.to}`);
    logToFile(`  - From: ${params.from}`);
    logToFile(`  - Subject: ${params.subject}`);
    logToFile(`  - Text length: ${params.text?.length || 0} characters`);
    logToFile(`  - HTML length: ${params.html?.length || 0} characters`);
    if (!apiKey) {
      const error = "Cannot send email: No SendGrid API key is set";
      console.error(error);
      logToFile(error);
      return false;
    }
    const apiKeyLength = apiKey.length;
    logToFile(`Using SendGrid API key (${apiKeyLength} characters)`);
    mailService.setApiKey(apiKey);
    logToFile(`API key set in mail service`);
    const emailData = {
      to: params.to,
      from: params.from,
      subject: params.subject,
      text: params.text || "",
      html: params.html || "",
obtv-admin@obview-tbn:/var/www/obview$ # Check package.json to understand dependencies
cat /var/www/obview/package.json
{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.4",
    "@sendgrid/mail": "^8.1.5",
    "@tailwindcss/vite": "^4.1.3",
    "@tanstack/react-query": "^5.60.5",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "connect-pg-simple": "^10.0.0",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "drizzle-orm": "^0.39.1",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "input-otp": "^1.4.2",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "multer": "^1.4.5-lts.2",
    "next-themes": "^0.4.6",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.2",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.0.11",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/node": "20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/ws": "^8.5.13",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "^5.4.14"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}
obtv-admin@obview-tbn:/var/www/obview$