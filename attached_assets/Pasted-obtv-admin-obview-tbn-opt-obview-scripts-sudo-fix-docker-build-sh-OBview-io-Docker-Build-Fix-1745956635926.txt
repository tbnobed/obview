obtv-admin@obview-tbn:/opt/obview/scripts$ sudo ./fix-docker-build.sh
?? OBview.io Docker Build Fixer ??
==================================================
Using project base directory: /opt/obview

Step 1: Checking and creating required directories...
? Created drizzle and migrations directories
? Created placeholder files
Detected output directory from config: ./migrations
? Created configured output directory: ./migrations

Step 2: Making scripts executable...
? Made scripts executable

Step 3: Preparing Docker environment...
? Docker environment ready

Step 4: Rebuilding Docker images...
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
[+] Building 20.8s (23/26)                                              docker:default
 => [app internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 1.59kB                                            0.0s
 => WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 1)    0.0s
 => WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 23)   0.0s
 => [app internal] load metadata for docker.io/library/node:20-alpine             0.6s
 => [app internal] load .dockerignore                                             0.0s
 => => transferring context: 425B                                                 0.0s
 => [app builder 1/8] FROM docker.io/library/node:20-alpine@sha256:c628bdc7ebc7f  0.0s
 => [app internal] load build context                                             0.0s
 => => transferring context: 35.61kB                                              0.0s
 => CACHED [app builder 2/8] RUN apk add --no-cache python3 make g++ libc6-compa  0.0s
 => CACHED [app builder 3/8] WORKDIR /app                                         0.0s
 => CACHED [app builder 4/8] COPY package*.json ./                                0.0s
 => CACHED [app builder 5/8] RUN npm ci                                           0.0s
 => [app builder 6/8] COPY . .                                                    0.1s
 => [app builder 7/8] RUN node scripts/setup-drizzle.cjs                          0.3s
 => [app builder 8/8] RUN npm run build                                          12.8s
 => CACHED [app production  2/15] RUN apk add --no-cache postgresql-client        0.0s
 => CACHED [app production  3/15] WORKDIR /app                                    0.0s
 => CACHED [app production  4/15] COPY --from=builder /app/dist ./dist            0.0s
 => CACHED [app production  5/15] COPY --from=builder /app/node_modules ./node_m  0.0s
 => CACHED [app production  6/15] COPY --from=builder /app/package*.json ./       0.0s
 => CACHED [app production  7/15] COPY --from=builder /app/drizzle.config.ts ./   0.0s
 => CACHED [app production  8/15] RUN mkdir -p uploads                            0.0s
 => CACHED [app production  9/15] RUN mkdir -p migrations                         0.0s
 => CACHED [app production 10/15] RUN mkdir -p drizzle                            0.0s
 => ERROR [app production 11/15] COPY --from=builder /app/migrations ./migration  0.0s
 => ERROR [app production 12/15] COPY --from=builder /app/drizzle ./drizzle 2>/d  0.0s
------
 > [app production 11/15] COPY --from=builder /app/migrations ./migrations 2>/dev/null || true:
------
------
 > [app production 12/15] COPY --from=builder /app/drizzle ./drizzle 2>/dev/null || true:
------