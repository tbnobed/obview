obtv-admin@tbn-obview:/var/www/obview$ import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('Fixing authentication routes...');

// Check if server/routes.ts exists
const routesPath = path.join(__dirname, 'server', 'routes.ts');
if (fs.existsSync(routesPath)) {
  console.log('Found server/routes.ts, inspecting...');

  let routesContent = fs.readFileSync(routesPath, 'utf8');
  let modified = false;

  // Check if the auth route is being handled
  if (!routesContent.includes('/auth')) {
    console.log('No /auth route found, adding catch-all route for client-side routing...');

    // Add a catch-all route at the end to serve the React app for any unmatched routes
    const catchAllRoute = `
  // Handle client-side routing - serve index.html for unmatched routes
  app.get('*', (req, res, next) => {
    // Skip API routes
    if (req.path.startsWith('/api/')) {
      return next();
    }

    // Serve index.html for client-side routes
    const indexPath = path.join(__dirname, '..', 'dist', 'public', 'index.html');
    if (fs.existsSync(indexPath)) {
      res.sendFile(indexPath);
    } else {
      console.error('Error: index.html not found at', indexPath);
      res.status(404).send('Application not properly built. Missing index.html');
    }
  });
`;

    // Find the right position to add the catch-all route
    // We want to add it before the return httpServer statement
    const returnIndex = routesContent.indexOf('return httpServer');
    if (returnIndex !== -1) {
      routesContent =
        routesContent.slice(0, returnIndex) +
        catchAllRoute +
        routesContent.slice(returnIndex);
      modified = true;
console.log('Done fixing authentication routes');in compiled file'); compiled file'););
-bash: import: command not found
-bash: import: command not found
-bash: import: command not found
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `'Fixing authentication routes...''
-bash: //: Is a directory
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `routesPath'
-bash: syntax error near unexpected token `'Found server/routes.ts, inspecting...''
-bash: syntax error near unexpected token `('
-bash: let: =: syntax error: operand expected (error token is "=")
-bash: //: Is a directory
-bash: !routesContent.includes: event not found
-bash: syntax error near unexpected token `'No /auth route found, adding catch-all route for client-side routing...''
-bash: //: Is a directory
-bash: //: Is a directory
-bash: command substitution: line 3: syntax error near unexpected token `'*','
-bash: command substitution: line 3: `  app.get('*', (req, res, next) => {'
-bash: const: command not found
-bash: //: Is a directory
-bash: //: Is a directory
-bash: syntax error near unexpected token `('
-bash: syntax error near unexpected token `{'
-bash: routesContent: command not found
-bash: syntax error near unexpected token `0,'
-bash: catchAllRoute: command not found
-bash: syntax error near unexpected token `returnIndex'
-bash: modified: command not found
-bash: syntax error near unexpected token `}'
-bash: syntax error near unexpected token `'Could not find position to add catch-all route''
-bash: syntax error near unexpected token `}'
-bash: //: Is a directory
-bash: !routesContent.includes: event not found
-bash: syntax error near unexpected token `('
-bash: !compiledRoutes.includes: event not found
-bash: !compiledRoutes.includes: event not found
>